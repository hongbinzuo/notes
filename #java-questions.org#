** Java EE

*** General
**** JNDI
http://blog.csdn.net/zhaosg198312/article/details/3979435

*** Servlet, Listener, Filter和Interceptor的区别
http://blog.csdn.net/sundenskyqq/article/details/8549932
http://listenup.iteye.com/blog/1559553
简要回答：
1、servlet：servlet是一种运行服务器端的java应用程序，具有独立于平台和协议的特性，并且可以动态的生成web页面，它工作在客户端请求与服务器响应的中间层。
2、filter：filter是一个可以复用的代码片段，可以用来转换HTTP请求、响应和头信息。Filter不像Servlet，它不能产生一个请求或者响应，它只是修改对某一资源的请求，或者修改从某一的响应。
3、listener：监听器，从字面上可以看出listener主要用来监听只用。通过listener可以监听web服务器中某一个执行动作，并根据其要求作出相应的响应。通俗的语言说就是在application，session，request三个对象创建消亡或者往其中添加修改删除属性时自动执行代码的功能组件。
4、interceptor：是在面向切面编程的，就是在你的service或者一个方法，前调用一个方法，或者在方法后调用一个方法，比如动态代理就是拦截器的简单实现，在你调用方法前打印出字符串（或者做其它业务逻辑的操作），也可以在你调用方法后打印出字符串，甚至在你抛出异常的时候做业务逻辑的操作。
5、servlet、filter、listener是配置到web.xml中，interceptor不配置到web.xml中，struts的拦截器配置到struts.xml中。spring的拦截器配置到spring.xml中。


Spring的拦截器与Servlet的Filter有相似之处，比如二者都是AOP编程思想的体现，都能实现权限检查、日志记录等。不同的是：
使用范围不同：Filter是Servlet规范规定的，只能用于Web程序中。而拦截器既可以用于Web程序，也可以用于Application、Swing程序中。
规范不同：Filter是在Servlet规范中定义的，是Servlet容器支持的。而拦截器是在Spring容器内的，是Spring框架支持的。
使用的资源不同：同其他的代码块一样，拦截器也是一个Spring的组件，归Spring管理，配置在Spring文件中，因此能使用Spring里的任何资源、对象，例如Service对象、数据源、事务管理等，通过IoC注入到拦截器即可；而Filter则不能。
深度不同：Filter在只在Servlet前后起作用。而拦截器能够深入到方法前后、异常抛出前后等，因此拦截器的使用具有更大的弹性。所以在Spring构架的程序中，要优先使用拦截器。

*** Web Service
**** 一篇通俗的科普文章
http://www.360doc.com/content/11/1104/16/1073512_161674938.shtml
**** 用JAX-WS原生库开发Web Service（轻量级）
http://www.cnblogs.com/Johness/archive/2013/04/19/3030392.html
一般使用wsimport, wsgen生成客户端 做测试
**** Web Service的开发框架
axis, CXF etc.
http://marshzg.iteye.com/blog/1608260
**** Why CXF instead of axis or Spring WS
http://stackoverflow.com/questions/16260529/why-apache-cxf
http://architects.dzone.com/articles/apache-cxf-vs-apache-axis-vs
**** TODO wsimport & wsgen
都不是很清楚
http://www.coderanch.com/t/625764/java-Web-Services-SCDJWS/certification/difference-wsimport-wsgen-command
http://blog.csdn.net/glfaaaaa/article/details/8772239
**** Test
三种REST WS的测试方法
http://blog.dayanjia.com/2010/08/3-ways-to-test-restful-web-services/


*** SSH
**** Spring MVC与Struts2的区别
http://blog.csdn.net/ya2dan/article/details/7395458

***** 机制：Spring MVC的入口是Servlet，而Struts2是filter。这样就导致了二者的机制不同，这里就牵涉到servlet和filter的区别了。
***** TODO 性能：Spring MVC比Struts更快吗？这是个问题
http://elf8848.iteye.com/blog/698217
结论：
Struts2框架性能很好， 但Struts2的标签性能太差了，要避免使用 Struts2标签。
Struts2由于采用了值栈、OGNL表达式、Struts2标签库等，会导致性能下降，很严重的下降。如果避免或减少使用这些，性能还是很好的。
Struts2的多层拦截器、多实例Action性能都很好，并不是导致性能问题的原因。
http://www.iteye.com/topic/679543?page=1
http://wenku.baidu.com/view/148d7e34eefdc8d376ee32ac.html

注：以上测试都没有数据库，也没有复杂业务，action和jsp中内容很简单，目的就是测试MVC部分的性能。

***** Struts的缺点（易用性方面）：
1：对Java标准响应太慢：Struts2的注解用起来很蛋疼完全就是配置文件的copy；
2：Struts2没有做到COC，配置比较繁琐；虽然有一些插件来解决，但是学习成本高，而SpringMVC的配置沿袭Spring，尤其是对注解的支持；
3：Struts2对RESTful的支持特别脑残。
4 Struts2 0-Day漏洞
***** Struts Action的线程安全
http://blog.csdn.net/virgoboy2004/article/details/5876133
Struts1使用的是Servlet所以不是线程安全的，而Struts2中的Action对象不是Servlet，对于每个Request都会生成一个Action实例，所以是线程安全的，但是也是比较耗内存的。（需要在Spring中配置Scope=prototype）


**** SSH架构
一般分为四层：Web展现层、服务层、DAO层和持久化层（也叫实体层或Model层）

**** Hibernate
***** HQL和SQL有什么区别（两个内容差不多）
http://zhenchengchagangzi.iteye.com/blog/1441006
http://wenku.baidu.com/view/4092f659be23482fb4da4c48.html

***** How to show Real SQL
http://stackoverflow.com/questions/2536829/hibernate-show-real-sql
If you want to see the SQL sent directly to the database (that is formatted similar to your example), you'll have to use some kind of
jdbc driver proxy like P6Spy (or log4jdbc).

*** 线程安全
**** Servlet的线程安全问题
http://nxdxt.blog.51cto.com/394/59399
解决方案：实现 SingleThreadModel 接口【不建议使用，阻塞产生性能问题】；同步对共享数据的操作（sychronized）；避免使用实例变量

**** ThreadLocal
http://my.oschina.net/davidzhang/blog/111010
顾名思义它是local variable（线程局部变量）。它的功用非常简单，就是为每一个使用该变量的线程都提供一个变量值的副本。从线程的角度看，就好像每一个线程都完全拥有该变量。
